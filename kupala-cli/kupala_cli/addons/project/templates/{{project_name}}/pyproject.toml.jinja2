[project]
name = "{{ project_name }}"
version = "0.1.0"
description = ""
license = ""
readme = "README.md"
requires-python = ">={{ python_version }}"
dependencies = [
    "kupala>={{ kupala_version }}",
    "kupala-cli>={{ kupala_cli_version }}",
]


[tool.mypy]
files = ["{{ project_name }}", "tests"]
exclude = ["var", ".venv", ".git", "alembic"]
pretty = true
strict = true
show_error_context = true
show_column_numbers = true
show_error_codes = true
implicit_reexport = true

[tool.ruff]
line-length = 120
target-version = "py{{ python_version|replace('.', '') }}"
indent-width = 4
exclude = ["var", ".venv", ".git"]

[tool.ruff.lint]
fixable = ["ALL"]
select = ["E", "F"]
exclude = []

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
norecursedirs = [
    "node_modules", "assets", "dist", ".git", "var",
    "*/migrations/*", "*/static/*", "docs", ".venv"
]
addopts = "--tb=short -s --no-cov-on-fail"
testpaths = ["tests"]

[tool.coverage.run]
branch = false
parallel = true
source = ["{{ project_name }}", "tests"]
omit = [".venv/*", ".git/*", "*/__main__.py", "examples"]

[tool.coverage.report]
fail_under = 75
show_missing = true
skip_covered = true
skip_empty = true

exclude_also = [
    "raise AssertionError",
    "raise NotImplementedError",
    "def __repr__",
    "if self\\.debug",
    "if 0:",
    "if False:",
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "var/coverage/html_report"
